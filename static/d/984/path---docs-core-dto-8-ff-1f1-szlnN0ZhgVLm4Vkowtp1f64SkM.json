{"pageContext":{"html":"<h1 id=\"using-data-transfer-objects-dtos\"><a href=\"#using-data-transfer-objects-dtos\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using Data Transfer Objects (DTOs)</h1>\n<h2 id=\"specifying-an-input-or-an-output-class\"><a href=\"#specifying-an-input-or-an-output-class\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Specifying an Input or an Output Class</h2>\n<p>For a given resource class, you may want to have a different representation of this class as input (write) or output (read).\nTo do so, a resource can take an input and/or an output class:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Entity/Book.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Dto<span class=\"token punctuation\">\\</span>BookInput</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Dto<span class=\"token punctuation\">\\</span>BookOutput</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @ApiResource(\n *   inputClass=BookInput::class,\n *   outputClass=BookOutput::class\n * )\n */</span>\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>The <code class=\"language-text\">input_class</code> attribute is used during <a href=\"/serialization-b56f8c7fbd3714759a0be7fa02a128b7.md\">the deserialization process</a>, when transforming the user provided data to a resource instance.\nSimilarly, the <code class=\"language-text\">output_class</code> attribute is used during the serialization process, this class represents how the <code class=\"language-text\">Book</code> resource will be represented in the <code class=\"language-text\">Response</code>.</p>\n<p>To create a <code class=\"language-text\">Book</code>, we <code class=\"language-text\">POST</code> a data structure corresponding to the <code class=\"language-text\">BookInput</code> class and get back in the response a data structure corresponding to the <code class=\"language-text\">BookOuput</code> class.</p>\n<p>To persist the input object, a custom <a href=\"/data-persisters-b09e2631d6efc92a68d202a27e8f645d.md\">data persister</a> handling <code class=\"language-text\">BookInput</code> instances must be written.\nTo retrieve an instance of the output class, a custom <a href=\"/data-providers-eb35506aad6ae36935ebb6a6f23b26d6.md\">data provider</a> returning a <code class=\"language-text\">BookOutput</code> instance must be written.</p>\n<p>The <code class=\"language-text\">input_class</code> and <code class=\"language-text\">output_class</code> attributes are taken into account by all the documentation generators (GraphQL and OpenAPI, Hydra).</p>\n<h2 id=\"disabling-the-input-or-the-output\"><a href=\"#disabling-the-input-or-the-output\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disabling the Input or the Output</h2>\n<p>Both the <code class=\"language-text\">input_class</code> and the <code class=\"language-text\">output_class</code> attributes can be set to <code class=\"language-text\">false</code>.\nIf <code class=\"language-text\">input_class</code> is <code class=\"language-text\">false</code>, the deserialization process will be skipped, and no data persisters will be called.\nIf <code class=\"language-text\">output_class</code> is <code class=\"language-text\">false</code>, the serialization process will be skipped, and no data providers will be called. </p>\n<h2 id=\"creating-a-service-oriented-endpoint\"><a href=\"#creating-a-service-oriented-endpoint\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating a Service-Oriented endpoint</h2>\n<p>Sometimes it's convenient to create <a href=\"https://en.wikipedia.org/wiki/Remote_procedure_call\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">RPC</a>-like endpoints.\nFor example, the application should be able to send an email when someone has lost his password.</p>\n<p>So let's create a basic DTO for this request:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Entity/ResetPasswordRequest.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Validator<span class=\"token punctuation\">\\</span>Constraints</span> <span class=\"token keyword\">as</span> Assert<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @ApiResource(\n *     collectionOperations={\n *         \"post\"={\n *             \"path\"=\"/users/forgot-password-request\"\n *        },\n *     },\n *     itemOperations={},\n *     outputClass=false\n * )\n */</span>\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ResetPasswordRequest</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * @var string\n     *\n     * @Assert\\NotBlank\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>In this case, we disable all operations except <code class=\"language-text\">POST</code>. We also set the <code class=\"language-text\">output_class</code> attribute to <code class=\"language-text\">false</code> to hint API Platform that no data will be returned by this endpoint.</p>\n<p>Then, thanks to <a href=\"/data-persisters-b09e2631d6efc92a68d202a27e8f645d.md\">a custom data persister</a>, it's possible to trigger some custom logic when the request is received.</p>\n<p>Create the data persister:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/DataPersister/ResetPasswordRequestDataPersister.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>DataPersister</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataPersister<span class=\"token punctuation\">\\</span>DataPersisterInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>ResetPasswordRequest</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ResetPasswordRequestDataPersister</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">DataPersisterInterface</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">supports</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> bool\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">ResetPasswordRequest</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">persist</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Trigger your custom logic here</span>\n      <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token punctuation\">\\</span>RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'\"remove\" is not supported'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>And register it:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># api/config/services.yaml</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># ...</span>\n    <span class=\"token key atrule\">'App\\DataPersister\\ResetPasswordRequestDataPersister'</span><span class=\"token punctuation\">:</span> <span class=\"token null important\">~</span>\n        <span class=\"token comment\"># Uncomment only if autoconfiguration is disabled</span>\n        <span class=\"token comment\">#tags: [ 'api_platform.data_persister' ]</span></code></pre></div>\n<p>Instead of a custom data persister, you'll probably want to leverage <a href=\"/messenger-840d2332e005eb44b7f3e816e8599960.md\">the Symfony Messenger Component integration</a>.</p>","editPath":"core/dto.md","title":"Using Data Transfer Objects (DTOs)","previous":{"slug":"/docs/core/messenger/","title":"Symfony Messenger Integration: CQRS and Async Message Processing"},"next":{"slug":"/docs/core/push-relations/","title":"Pushing Related Resources Using HTTP/2"}}}